Index: lede-ar750/target/linux/ar71xx/base-files/etc/board.d/01_leds
===================================================================
--- lede-ar750.orig/target/linux/ar71xx/base-files/etc/board.d/01_leds
+++ lede-ar750/target/linux/ar71xx/base-files/etc/board.d/01_leds
@@ -275,6 +275,10 @@ dlan-pro-1200-ac)
 	ucidef_set_led_gpio "plcw" "dLAN" "devolo:status:dlan" "17" "0"
 	ucidef_set_led_gpio "plcr" "dLAN" "devolo:error:dlan" "16" "0"
 	;;
+gl-ar750)
+	ucidef_set_led_wlan "wlan-2g" "WLAN-2G" "gl-ar750:wlan-2g" "phy1tpt"
+	ucidef_set_led_wlan "wlan-5g" "WLAN-5G" "gl-ar750:wlan-5g" "phy0tpt"
+	;;
 gl-ar150|\
 gl-ar300|\
 gl-ar300m|\
Index: lede-ar750/target/linux/ar71xx/base-files/etc/board.d/02_network
===================================================================
--- lede-ar750.orig/target/linux/ar71xx/base-files/etc/board.d/02_network
+++ lede-ar750/target/linux/ar71xx/base-files/etc/board.d/02_network
@@ -124,6 +124,7 @@ ar71xx_setup_interfaces()
 	alfa-nx|\
 	gl-ar150|\
 	gl-ar300m|\
+	gl-ar750|\
 	gl-domino|\
 	gl-inet|\
 	gl-mifi|\
Index: lede-ar750/target/linux/ar71xx/base-files/etc/diag.sh
===================================================================
--- lede-ar750.orig/target/linux/ar71xx/base-files/etc/diag.sh
+++ lede-ar750/target/linux/ar71xx/base-files/etc/diag.sh
@@ -475,6 +475,7 @@ set_state() {
 	done)
 		status_led_on
 		case $(ar71xx_board_name) in
+		gl-ar750|\
 		gl-ar300m)
 			fw_printenv lc >/dev/null 2>&1 && fw_setenv "bootcount" 0
 			;;
Index: lede-ar750/target/linux/ar71xx/base-files/lib/ar71xx.sh
===================================================================
--- lede-ar750.orig/target/linux/ar71xx/base-files/lib/ar71xx.sh
+++ lede-ar750/target/linux/ar71xx/base-files/lib/ar71xx.sh
@@ -626,6 +626,9 @@ ar71xx_board_detect() {
 	*"GL-AR300M")
 		name="gl-ar300m"
 		;;
+	*"GL-AR750")
+		name="gl-ar750"
+		;;
 	*"GL-MIFI")
 		name="gl-mifi"
 		;;
Index: lede-ar750/target/linux/ar71xx/base-files/lib/upgrade/platform.sh
===================================================================
--- lede-ar750.orig/target/linux/ar71xx/base-files/lib/upgrade/platform.sh
+++ lede-ar750/target/linux/ar71xx/base-files/lib/upgrade/platform.sh
@@ -572,6 +572,7 @@ platform_check_image() {
 		cybertan_check_image "$1" && return 0
 		return 1
 		;;
+	gl-ar750|\
 	gl-ar300m)
 		platform_check_image_gl_ar300m "$1" "$board" "$magic" && return 0
 		return 1
@@ -648,6 +649,7 @@ platform_pre_upgrade() {
 	local board=$(ar71xx_board_name)
 
 	case "$board" in
+	gl-ar750|\
 	gl-ar300m)
 		platform_pre_upgrade_gl_ar300m "$1"
 		;;
Index: lede-ar750/target/linux/ar71xx/config-4.4
===================================================================
--- lede-ar750.orig/target/linux/ar71xx/config-4.4
+++ lede-ar750/target/linux/ar71xx/config-4.4
@@ -104,6 +104,7 @@ CONFIG_ATH79_MACH_F9K1115V2=y
 CONFIG_ATH79_MACH_GL_AR150=y
 CONFIG_ATH79_MACH_GL_AR300=y
 CONFIG_ATH79_MACH_GL_AR300M=y
+CONFIG_ATH79_MACH_GL_AR750=y
 CONFIG_ATH79_MACH_GL_DOMINO=y
 CONFIG_ATH79_MACH_GL_INET=y
 CONFIG_ATH79_MACH_GL_MIFI=y
@@ -362,12 +363,12 @@ CONFIG_MTD_M25P80=y
 # CONFIG_MTD_MAP_BANK_WIDTH_4 is not set
 CONFIG_MTD_MYLOADER_PARTS=y
 CONFIG_MTD_NAND=y
+CONFIG_MTD_NAND_ATH79=y
 CONFIG_MTD_NAND_ECC=y
 CONFIG_MTD_NAND_ECC_SMC=y
 CONFIG_MTD_PHYSMAP=y
 CONFIG_MTD_REDBOOT_DIRECTORY_BLOCK=-2
 CONFIG_MTD_REDBOOT_PARTS=y
-CONFIG_MTD_NAND_ATH79=y
 CONFIG_MTD_SPINAND_ONDIEECC=y
 CONFIG_MTD_SPI_NOR=y
 CONFIG_MTD_SPLIT_FIRMWARE=y
Index: lede-ar750/target/linux/ar71xx/files/arch/mips/ath79/Kconfig.openwrt
===================================================================
--- lede-ar750.orig/target/linux/ar71xx/files/arch/mips/ath79/Kconfig.openwrt
+++ lede-ar750/target/linux/ar71xx/files/arch/mips/ath79/Kconfig.openwrt
@@ -680,6 +680,16 @@ config ATH79_MACH_GL_AR300M
 	select ATH79_DEV_USB
 	select ATH79_DEV_WMAC
 
+config ATH79_MACH_GL_AR750
+	bool "GL_AR750 support"
+	select SOC_QCA953X
+	select ATH79_DEV_ETH
+	select ATH79_DEV_GPIO_BUTTONS
+	select ATH79_DEV_LEDS_GPIO
+	select ATH79_DEV_M25P80
+	select ATH79_DEV_USB
+	select ATH79_DEV_WMAC
+
 config ATH79_MACH_GL_DOMINO
 	bool "DOMINO support"
 	select SOC_AR933X
Index: lede-ar750/target/linux/ar71xx/files/arch/mips/ath79/Makefile
===================================================================
--- lede-ar750.orig/target/linux/ar71xx/files/arch/mips/ath79/Makefile
+++ lede-ar750/target/linux/ar71xx/files/arch/mips/ath79/Makefile
@@ -108,6 +108,7 @@ obj-$(CONFIG_ATH79_MACH_F9K1115V2)		+= m
 obj-$(CONFIG_ATH79_MACH_GL_AR150)		+= mach-gl-ar150.o
 obj-$(CONFIG_ATH79_MACH_GL_AR300)		+= mach-gl-ar300.o
 obj-$(CONFIG_ATH79_MACH_GL_AR300M)		+= mach-gl-ar300m.o
+obj-$(CONFIG_ATH79_MACH_GL_AR750)		+= mach-gl-ar750.o
 obj-$(CONFIG_ATH79_MACH_GL_DOMINO)		+= mach-gl-domino.o
 obj-$(CONFIG_ATH79_MACH_GL_INET)		+= mach-gl-inet.o
 obj-$(CONFIG_ATH79_MACH_GL_MIFI)		+= mach-gl-mifi.o
Index: lede-ar750/target/linux/ar71xx/files/arch/mips/ath79/machtypes.h
===================================================================
--- lede-ar750.orig/target/linux/ar71xx/files/arch/mips/ath79/machtypes.h
+++ lede-ar750/target/linux/ar71xx/files/arch/mips/ath79/machtypes.h
@@ -99,6 +99,7 @@ enum ath79_mach_type {
 	ATH79_MACH_GL_AR150,			/* GL-AR150 support */
 	ATH79_MACH_GL_AR300,			/* GL-AR300 */
 	ATH79_MACH_GL_AR300M,			/* GL-AR300M */
+	ATH79_MACH_GL_AR750,			/* GL-AR750 */
 	ATH79_MACH_GL_DOMINO,			/* Domino */
 	ATH79_MACH_GL_INET,			/* GL-CONNECT GL-INET */
 	ATH79_MACH_GL_MIFI,			/* GL-MIFI support */
Index: lede-ar750/target/linux/ar71xx/image/generic.mk
===================================================================
--- lede-ar750.orig/target/linux/ar71xx/image/generic.mk
+++ lede-ar750/target/linux/ar71xx/image/generic.mk
@@ -148,6 +148,16 @@ define Device/gl-ar300m
 endef
 TARGET_DEVICES += gl-ar300m
 
+define Device/gl-ar750
+  DEVICE_TITLE := GL AR750
+  DEVICE_PACKAGES := kmod-usb-core kmod-usb2 uboot-envtools
+  BOARDNAME = GL-AR750
+  IMAGE_SIZE = 16000k
+  CONSOLE = ttyS0,115200
+  MTDPARTS = spi0.0:256k(u-boot)ro,64k(u-boot-env),64k(art)ro,16000k(firmware)
+endef
+TARGET_DEVICES += gl-ar750
+
 define Device/gl-domino
   DEVICE_TITLE := GL Domino Pi
   DEVICE_PACKAGES := kmod-usb-core kmod-usb2
Index: lede-ar750/target/linux/ar71xx/base-files/etc/hotplug.d/firmware/11-ath10k-caldata
===================================================================
--- lede-ar750.orig/target/linux/ar71xx/base-files/etc/hotplug.d/firmware/11-ath10k-caldata
+++ lede-ar750/target/linux/ar71xx/base-files/etc/hotplug.d/firmware/11-ath10k-caldata
@@ -67,6 +67,10 @@ case "$FIRMWARE" in
 		ath10kcal_extract "art" 20480 2116
 		ath10kcal_patch_mac $(mtd_get_mac_binary art 18)
 		;;
+	gl-ar750)
+		ath10kcal_extract "art" 20480 2116
+		ath10kcal_patch_mac $(macaddr_add $(mtd_get_mac_binary art 0) +1)
+		;;	
 	epg5000 | \
 	esr1750)
 		ath10kcal_extract "caldata" 20480 2116
Index: lede-ar750/target/linux/ar71xx/base-files/etc/uci-defaults/03_fix_dnsmasq_dhcp
===================================================================
--- /dev/null
+++ lede-ar750/target/linux/ar71xx/base-files/etc/uci-defaults/03_fix_dnsmasq_dhcp
@@ -0,0 +1,32 @@
+#!/bin/sh
+#
+# Copyright (C) 2013 OpenWrt.org
+#
+
+. /lib/functions.sh
+
+config_dnsmasq_dhcp()
+{
+		uci set dhcp.@dhcp[0].force=1
+		uci commit dhcp
+		uci set wireless.radio0.doth=0
+		uci commit wireless
+}
+
+
+
+. /lib/ar71xx.sh
+
+board=$(ar71xx_board_name)
+
+case "$board" in
+	gl-ar750)
+	config_dnsmasq_dhcp
+	;;
+*)
+	;;
+esac
+
+
+exit 0
+
Index: lede-ar750/target/linux/ar71xx/files/arch/mips/ath79/mach-gl-ar750.c
===================================================================
--- /dev/null
+++ lede-ar750/target/linux/ar71xx/files/arch/mips/ath79/mach-gl-ar750.c
@@ -0,0 +1,187 @@
+/*
+ *  GLI AR750 board support
+ *
+ *  Copyright (C) 2011 dongyuqi <729650915@qq.com>
+ *  Copyright (C) 2011-2012 Gabor Juhos <juhosg@openwrt.org>
+ *  Copyright (C) 2013 alzhao <alzhao@gmail.com>
+ *  Copyright (C) 2014 Michel Stempin <michel.stempin@wanadoo.fr>
+ *
+ *  This program is free software; you can redistribute it and/or modify it
+ *  under the terms of the GNU General Public License version 2 as published
+ *  by the Free Software Foundation.
+ */
+
+#include <linux/gpio.h>
+#include <linux/pci.h>
+
+#include <asm/mach-ath79/ath79.h>
+#include <asm/mach-ath79/ar71xx_regs.h>
+#include <linux/i2c.h>
+#include <linux/i2c-gpio.h>
+#include <linux/platform_device.h>
+
+#include "common.h"
+#include "dev-ap9x-pci.h"
+#include "dev-eth.h"
+#include "dev-gpio-buttons.h"
+#include "dev-leds-gpio.h"
+#include "dev-m25p80.h"
+#include "dev-usb.h"
+#include "dev-spi.h"
+#include "dev-wmac.h"
+#include "machtypes.h"
+#include "pci.h"
+
+#define GL_AR750_GPIO_LED_USB		2
+#define GL_AR750_GPIO_LED_WLAN		13
+#define GL_AR750_GPIO_LED_LAN		14
+#define GL_AR750_GPIO_LED_SYSTEM	12
+#define GL_AR750_GPIO_BTN_RESET	3
+#define GL_AR750_GPIO_BTN_LEFT		0
+#define GL_AR750_GPIO_BTN_RIGHT	1
+
+#define GL_AR750_GPIO_I2C_SCL	16
+#define GL_AR750_GPIO_I2C_SDA	17
+
+#define GL_AR750_KEYS_POLL_INTERVAL        20  /* msecs */
+#define GL_AR750_KEYS_DEBOUNCE_INTERVAL    (3 * GL_AR750_KEYS_POLL_INTERVAL)
+
+#define GL_AR750_MAC0_OFFSET   0
+#define GL_AR750_MAC1_OFFSET   6
+#define GL_AR750_WMAC_CALDATA_OFFSET   0x1000
+#define GL_AR750_PCIE_CALDATA_OFFSET   0x5000
+
+static struct gpio_led gl_ar750_leds_gpio[] __initdata = {
+    {
+        .name = "gl-ar750:usbpow",
+        .gpio = GL_AR750_GPIO_LED_USB,
+        .active_low = 0,
+        .default_state = 1,
+    },
+    {
+        .name = "gl-ar750:wlan-2g",
+        .gpio = GL_AR750_GPIO_LED_LAN,
+        .active_low = 1,
+    },
+    {
+        .name = "gl-ar750:wlan-5g",
+        .gpio = GL_AR750_GPIO_LED_WLAN,
+        .active_low = 1,
+    },
+    {
+        .name = "gl-ar750:system",
+        .gpio = GL_AR750_GPIO_LED_SYSTEM,
+        .active_low = 1,
+        .default_state = 1,
+    },
+};
+
+static struct gpio_keys_button gl_ar750_gpio_keys[] __initdata = {
+    {
+        .desc = "reset",
+        .type = EV_KEY,
+        .code = KEY_RESTART,
+        .debounce_interval = GL_AR750_KEYS_DEBOUNCE_INTERVAL,
+        .gpio = GL_AR750_GPIO_BTN_RESET,
+        .active_low = 1,
+    },
+    {
+        .desc = "button right",
+        .type = EV_KEY,
+        .code = BTN_0,
+        .debounce_interval = GL_AR750_KEYS_DEBOUNCE_INTERVAL,
+        .gpio = GL_AR750_GPIO_BTN_LEFT,
+        .active_low = 0,
+    },
+    {
+        .desc = "button left",
+        .type = EV_KEY,
+        .code = BTN_1,
+        .debounce_interval = GL_AR750_KEYS_DEBOUNCE_INTERVAL,
+        .gpio = GL_AR750_GPIO_BTN_RIGHT,
+        .active_low = 0,
+    },
+};
+
+static struct spi_board_info gl_ar750_spi_info[] = {
+    {
+        .bus_num    = 0,
+        .chip_select    = 0,
+        .max_speed_hz   = 25000000,
+        .modalias   = "m25p80",
+        .platform_data  = NULL,
+    },
+    {
+        .bus_num    = 0,
+        .chip_select    = 1,
+        .max_speed_hz   = 25000000,
+        .modalias   = "ath79-spinand",
+        .platform_data  = NULL,
+    }
+};
+
+static struct ath79_spi_platform_data gl_ar750_spi_data = {
+    .bus_num        = 0,
+    .num_chipselect     = 2,
+};
+
+static struct i2c_gpio_platform_data gl_ar750_i2c_gpio_data = {
+	.sda_pin	= GL_AR750_GPIO_I2C_SDA,
+	.scl_pin	= GL_AR750_GPIO_I2C_SCL,
+};
+
+static struct platform_device gl_ar750_i2c_gpio_device = {
+	.name		= "i2c-gpio",
+	.id		= 0,
+	.dev = {
+		.platform_data  = &gl_ar750_i2c_gpio_data,
+	}
+};
+
+
+static void __init gl_ar750_setup(void)
+{
+    u8 *art = (u8 *) KSEG1ADDR(0x1f050000);
+    u8 tmpmac[ETH_ALEN];
+
+    ath79_gpio_function_enable(AR934X_GPIO_FUNC_JTAG_DISABLE);
+    ath79_register_spi(&gl_ar750_spi_data, gl_ar750_spi_info, 2);
+
+    /* register gpio LEDs and keys */
+    ath79_register_leds_gpio(-1, ARRAY_SIZE(gl_ar750_leds_gpio),
+                 gl_ar750_leds_gpio);
+    ath79_register_gpio_keys_polled(-1, GL_AR750_KEYS_POLL_INTERVAL,
+                    ARRAY_SIZE(gl_ar750_gpio_keys),
+                    gl_ar750_gpio_keys);
+
+    ath79_register_mdio(0, 0x0);
+
+    /* WAN */
+    ath79_init_mac(ath79_eth0_data.mac_addr, art + GL_AR750_MAC0_OFFSET, 0);
+    ath79_eth0_data.phy_if_mode = PHY_INTERFACE_MODE_MII;
+    ath79_eth0_data.speed = SPEED_100;
+    ath79_eth0_data.duplex = DUPLEX_FULL;
+    ath79_eth0_data.phy_mask = BIT(4);
+    ath79_register_eth(0);
+
+    /* LAN */
+    ath79_init_mac(ath79_eth1_data.mac_addr, art + GL_AR750_MAC0_OFFSET, 1);
+    ath79_eth1_data.phy_if_mode = PHY_INTERFACE_MODE_GMII;
+    ath79_eth1_data.speed = SPEED_1000;
+    ath79_eth1_data.duplex = DUPLEX_FULL;
+    ath79_switch_data.phy_poll_mask |= BIT(4);
+    ath79_switch_data.phy4_mii_en = 1;
+    ath79_register_eth(1);
+
+    ath79_init_mac(tmpmac, art + GL_AR750_WMAC_CALDATA_OFFSET + 2, 0);
+    ath79_register_wmac(art + GL_AR750_WMAC_CALDATA_OFFSET, tmpmac);
+	/*register i2c*/
+	platform_device_register(&gl_ar750_i2c_gpio_device);
+    /* enable usb */
+    ath79_register_usb();
+    /* enable pci */
+    ath79_register_pci();
+}
+
+MIPS_MACHINE(ATH79_MACH_GL_AR750, "GL-AR750", "GL-AR750",
+         gl_ar750_setup);
